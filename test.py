from reportlab import *
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.lib.units import cm, mm
from reportlab.lib import colors
from reportlab.platypus import Paragraph, Table, TableStyle, Image, Frame, Spacer, PageBreak, BaseDocTemplate, PageTemplate, SimpleDocTemplate, Flowable
from PIL import Image
from reportlab.lib.styles import ParagraphStyle, getSampleStyleSheet, TA_CENTER
from reportlab.graphics import barcode
import datetime

BASE_DIR = os.path.dirname(os.path.abspath(__file__))

print BASE_DIR

class expanseReportHead(Flowable):

    def __init__(self):
        Flowable.__init__(self)

    #----------------------------------------------------------------------
    def draw(self):
        """
        draw the floable
        """

        pSrc = '''
        <font size=14>Expense sheet</font><br/>
        <font size=8>
        <strong>Generated by:</strong> %s<br/>
        <strong>On:</strong> %s<br/><br/>
        </font>
        ''' % ('Manoj Kumar (51613174)', now.strftime("%d-%B-%Y - %H:%M %p"))

        story = []
        head = Paragraph(pSrc , styleN)
        head.wrapOn(self.canv , 100*mm, 50*mm)
        head.drawOn(self.canv , 0*mm, -10*mm)

        # barcode_value = "1234567890"
        # barcode39 = barcode.createBarcodeDrawing('EAN13', value = barcode_value,barWidth=0.3*mm,barHeight=10*mm)
        #
        # barcode39.drawOn(self.canv,160*mm,0*mm)
        self.canv.drawImage(os.path.join(BASE_DIR , 'logo.png') , 80*mm , 0*mm , 2*cm, 2*cm)


def addPageNumber(canvas, doc):
    """
    Add the page number
    """
    barcode_value = "1234567890"
    barcode39 = barcode.createBarcodeDrawing('EAN13', value = barcode_value,barWidth=0.3*mm,barHeight=10*mm)

    barcode39.drawOn(canvas,160*mm,270*mm)

    # page_num = canvas.getPageNumber()
    # text = "<font size='8'>Page #%s</font>" % page_num
    # p = Paragraph(text , styleN)
    # p.wrapOn(canvas , 50*mm , 10*mm)
    # p.drawOn(canvas , 100*mm , 10*mm)

class PageNumCanvas(canvas.Canvas):

    #----------------------------------------------------------------------
    def __init__(self, *args, **kwargs):
        """Constructor"""
        canvas.Canvas.__init__(self, *args, **kwargs)
        self.pages = []

    #----------------------------------------------------------------------
    def showPage(self):
        """
        On a page break, add information to the list
        """
        self.pages.append(dict(self.__dict__))
        self._startPage()

    #----------------------------------------------------------------------
    def save(self):
        """
        Add the page number to each page (page x of y)
        """
        page_count = len(self.pages)

        for page in self.pages:
            self.__dict__.update(page)
            self.draw_page_number(page_count)
            canvas.Canvas.showPage(self)

        canvas.Canvas.save(self)

    #----------------------------------------------------------------------
    def draw_page_number(self, page_count):
        """
        Add the page number
        """

        text = "<font size='8'>Page #%s of %s</font>" % (self._pageNumber , page_count)
        p = Paragraph(text , styleN)
        p.wrapOn(self , 50*mm , 10*mm)
        p.drawOn(self , 100*mm , 10*mm)

        # page = "Page %s of %s" % (, page_count)
        # self.setFont("Helvetica", 9)
        # self.drawRightString(195*mm, 272*mm, page)


MARGIN_SIZE = 8 * mm
PAGE_SIZE = A4

now = datetime.datetime.now()

# c = canvas.Canvas("hello.pdf")
# c.drawString(9*cm, 19*cm, "Hello World!")

pdfdoc = 'hello.pdf'

pdf_doc = SimpleDocTemplate(pdfdoc, pagesize = PAGE_SIZE,
    leftMargin = MARGIN_SIZE, rightMargin = MARGIN_SIZE,
    topMargin = 4*MARGIN_SIZE, bottomMargin = 3*MARGIN_SIZE)


styles=getSampleStyleSheet()
styleN = styles['Normal']
styleH = styles['Heading1']

# data = [['', '', '', 'Grand Total', '' , pFooterGrandTotal]]

text_data = ["S. No", "Vendor ID", "Vendor", "Description", "Date", "Invoice ID", "Amount (INR)"]

d = []
font_size = 8
centered = ParagraphStyle(name="centered", alignment=TA_CENTER)
for text in text_data:
    ptext = "<font size=%s><b>%s</b></font>" % (font_size, text)
    p = Paragraph(ptext, centered)
    d.append(p)

data = [d]
line_num = 1
formatted_line_data = []
for x in range(10):
    line_data = [str(line_num),"V101", "Sagar motors", "Tata zest", "12 June", "123456", "73090"]

    for item in line_data:
        ptext = "<font size=%s>%s</font>" % (font_size-1, item)
        p = Paragraph(ptext, centered)
        formatted_line_data.append(p)
    data.append(formatted_line_data)
    formatted_line_data = []
    line_num += 1

t = Table(data, colWidths=[35, 80, 100, 180, 50, 50, 50])

ts = TableStyle([('LINEABOVE',(0,0),(-1,0),0.25,colors.gray),
            ('LINEABOVE',(0,1),(-1,1),0.25,colors.gray),
            ('GRID', (0,0), (-1,-1), 1, colors.black),
        ])

t.setStyle(ts)

#add some flowables



story = []

expHead = expanseReportHead()
story.append(expHead)
story.append(Spacer(2.5,0.75*cm))
story.append(t)
story.append(Spacer(2.5,0.75*cm))

summryParaSrc = """
<font size='12'>Total amount : 10,000 INR</font>

"""
story.append(Paragraph(summryParaSrc , styleN))
pdf_doc.build(story,onFirstPage=addPageNumber, onLaterPages=addPageNumber, canvasmaker=PageNumCanvas)

# c.showPage()
# c.save()
